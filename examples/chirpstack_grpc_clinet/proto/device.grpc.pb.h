// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: api/device.proto
#ifndef GRPC_api_2fdevice_2eproto__INCLUDED
#define GRPC_api_2fdevice_2eproto__INCLUDED

#include "device.pb.h"

#include <functional>
#include <grpc/impl/codegen/port_platform.h>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace api {

// DeviceService is the service providing API methods for managing devices.
class DeviceService final {
 public:
  static constexpr char const* service_full_name() {
    return "api.DeviceService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Create the given device.
    virtual ::grpc::Status Create(::grpc::ClientContext* context, const ::api::CreateDeviceRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncCreate(::grpc::ClientContext* context, const ::api::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncCreateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncCreate(::grpc::ClientContext* context, const ::api::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncCreateRaw(context, request, cq));
    }
    // Get returns the device for the given DevEUI.
    virtual ::grpc::Status Get(::grpc::ClientContext* context, const ::api::GetDeviceRequest& request, ::api::GetDeviceResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceResponse>> AsyncGet(::grpc::ClientContext* context, const ::api::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceResponse>>(AsyncGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceResponse>> PrepareAsyncGet(::grpc::ClientContext* context, const ::api::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceResponse>>(PrepareAsyncGetRaw(context, request, cq));
    }
    // Update the given device.
    virtual ::grpc::Status Update(::grpc::ClientContext* context, const ::api::UpdateDeviceRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncUpdate(::grpc::ClientContext* context, const ::api::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncUpdateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncUpdate(::grpc::ClientContext* context, const ::api::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncUpdateRaw(context, request, cq));
    }
    // Delete the device with the given DevEUI.
    virtual ::grpc::Status Delete(::grpc::ClientContext* context, const ::api::DeleteDeviceRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDelete(::grpc::ClientContext* context, const ::api::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDelete(::grpc::ClientContext* context, const ::api::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteRaw(context, request, cq));
    }
    // Get the list of devices.
    virtual ::grpc::Status List(::grpc::ClientContext* context, const ::api::ListDevicesRequest& request, ::api::ListDevicesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::ListDevicesResponse>> AsyncList(::grpc::ClientContext* context, const ::api::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::ListDevicesResponse>>(AsyncListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::ListDevicesResponse>> PrepareAsyncList(::grpc::ClientContext* context, const ::api::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::ListDevicesResponse>>(PrepareAsyncListRaw(context, request, cq));
    }
    // Create the given device-keys.
    virtual ::grpc::Status CreateKeys(::grpc::ClientContext* context, const ::api::CreateDeviceKeysRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncCreateKeys(::grpc::ClientContext* context, const ::api::CreateDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncCreateKeysRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncCreateKeys(::grpc::ClientContext* context, const ::api::CreateDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncCreateKeysRaw(context, request, cq));
    }
    // Get the device-keys for the given DevEUI.
    virtual ::grpc::Status GetKeys(::grpc::ClientContext* context, const ::api::GetDeviceKeysRequest& request, ::api::GetDeviceKeysResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceKeysResponse>> AsyncGetKeys(::grpc::ClientContext* context, const ::api::GetDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceKeysResponse>>(AsyncGetKeysRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceKeysResponse>> PrepareAsyncGetKeys(::grpc::ClientContext* context, const ::api::GetDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceKeysResponse>>(PrepareAsyncGetKeysRaw(context, request, cq));
    }
    // Update the given device-keys.
    virtual ::grpc::Status UpdateKeys(::grpc::ClientContext* context, const ::api::UpdateDeviceKeysRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncUpdateKeys(::grpc::ClientContext* context, const ::api::UpdateDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncUpdateKeysRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncUpdateKeys(::grpc::ClientContext* context, const ::api::UpdateDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncUpdateKeysRaw(context, request, cq));
    }
    // Delete the device-keys for the given DevEUI.
    virtual ::grpc::Status DeleteKeys(::grpc::ClientContext* context, const ::api::DeleteDeviceKeysRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteKeys(::grpc::ClientContext* context, const ::api::DeleteDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteKeysRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteKeys(::grpc::ClientContext* context, const ::api::DeleteDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteKeysRaw(context, request, cq));
    }
    // FlushDevNonces flushes the OTAA device nonces.
    virtual ::grpc::Status FlushDevNonces(::grpc::ClientContext* context, const ::api::FlushDevNoncesRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncFlushDevNonces(::grpc::ClientContext* context, const ::api::FlushDevNoncesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncFlushDevNoncesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncFlushDevNonces(::grpc::ClientContext* context, const ::api::FlushDevNoncesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncFlushDevNoncesRaw(context, request, cq));
    }
    // Activate (re)activates the device with the given parameters (for ABP or for
    // importing OTAA activations).
    virtual ::grpc::Status Activate(::grpc::ClientContext* context, const ::api::ActivateDeviceRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncActivate(::grpc::ClientContext* context, const ::api::ActivateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncActivateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncActivate(::grpc::ClientContext* context, const ::api::ActivateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncActivateRaw(context, request, cq));
    }
    // Deactivate de-activates the device.
    virtual ::grpc::Status Deactivate(::grpc::ClientContext* context, const ::api::DeactivateDeviceRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeactivate(::grpc::ClientContext* context, const ::api::DeactivateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeactivateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeactivate(::grpc::ClientContext* context, const ::api::DeactivateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeactivateRaw(context, request, cq));
    }
    // GetActivation returns the current activation details of the device (OTAA or
    // ABP).
    virtual ::grpc::Status GetActivation(::grpc::ClientContext* context, const ::api::GetDeviceActivationRequest& request, ::api::GetDeviceActivationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceActivationResponse>> AsyncGetActivation(::grpc::ClientContext* context, const ::api::GetDeviceActivationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceActivationResponse>>(AsyncGetActivationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceActivationResponse>> PrepareAsyncGetActivation(::grpc::ClientContext* context, const ::api::GetDeviceActivationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceActivationResponse>>(PrepareAsyncGetActivationRaw(context, request, cq));
    }
    // GetRandomDevAddr returns a random DevAddr taking the NwkID prefix into
    // account.
    virtual ::grpc::Status GetRandomDevAddr(::grpc::ClientContext* context, const ::api::GetRandomDevAddrRequest& request, ::api::GetRandomDevAddrResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetRandomDevAddrResponse>> AsyncGetRandomDevAddr(::grpc::ClientContext* context, const ::api::GetRandomDevAddrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetRandomDevAddrResponse>>(AsyncGetRandomDevAddrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetRandomDevAddrResponse>> PrepareAsyncGetRandomDevAddr(::grpc::ClientContext* context, const ::api::GetRandomDevAddrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetRandomDevAddrResponse>>(PrepareAsyncGetRandomDevAddrRaw(context, request, cq));
    }
    // GetMetrics returns the device metrics.
    // Note that this requires a device-profile with codec and measurements
    // configured.
    virtual ::grpc::Status GetMetrics(::grpc::ClientContext* context, const ::api::GetDeviceMetricsRequest& request, ::api::GetDeviceMetricsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceMetricsResponse>> AsyncGetMetrics(::grpc::ClientContext* context, const ::api::GetDeviceMetricsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceMetricsResponse>>(AsyncGetMetricsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceMetricsResponse>> PrepareAsyncGetMetrics(::grpc::ClientContext* context, const ::api::GetDeviceMetricsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceMetricsResponse>>(PrepareAsyncGetMetricsRaw(context, request, cq));
    }
    // GetLinkMetrics returns the device link metrics.
    // This includes uplinks, downlinks, RSSI, SNR, etc...
    virtual ::grpc::Status GetLinkMetrics(::grpc::ClientContext* context, const ::api::GetDeviceLinkMetricsRequest& request, ::api::GetDeviceLinkMetricsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceLinkMetricsResponse>> AsyncGetLinkMetrics(::grpc::ClientContext* context, const ::api::GetDeviceLinkMetricsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceLinkMetricsResponse>>(AsyncGetLinkMetricsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceLinkMetricsResponse>> PrepareAsyncGetLinkMetrics(::grpc::ClientContext* context, const ::api::GetDeviceLinkMetricsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceLinkMetricsResponse>>(PrepareAsyncGetLinkMetricsRaw(context, request, cq));
    }
    // Enqueue adds the given item to the downlink queue.
    virtual ::grpc::Status Enqueue(::grpc::ClientContext* context, const ::api::EnqueueDeviceQueueItemRequest& request, ::api::EnqueueDeviceQueueItemResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::EnqueueDeviceQueueItemResponse>> AsyncEnqueue(::grpc::ClientContext* context, const ::api::EnqueueDeviceQueueItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::EnqueueDeviceQueueItemResponse>>(AsyncEnqueueRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::EnqueueDeviceQueueItemResponse>> PrepareAsyncEnqueue(::grpc::ClientContext* context, const ::api::EnqueueDeviceQueueItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::EnqueueDeviceQueueItemResponse>>(PrepareAsyncEnqueueRaw(context, request, cq));
    }
    // FlushQueue flushes the downlink device-queue.
    virtual ::grpc::Status FlushQueue(::grpc::ClientContext* context, const ::api::FlushDeviceQueueRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncFlushQueue(::grpc::ClientContext* context, const ::api::FlushDeviceQueueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncFlushQueueRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncFlushQueue(::grpc::ClientContext* context, const ::api::FlushDeviceQueueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncFlushQueueRaw(context, request, cq));
    }
    // GetQueue returns the downlink device-queue.
    virtual ::grpc::Status GetQueue(::grpc::ClientContext* context, const ::api::GetDeviceQueueItemsRequest& request, ::api::GetDeviceQueueItemsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceQueueItemsResponse>> AsyncGetQueue(::grpc::ClientContext* context, const ::api::GetDeviceQueueItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceQueueItemsResponse>>(AsyncGetQueueRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceQueueItemsResponse>> PrepareAsyncGetQueue(::grpc::ClientContext* context, const ::api::GetDeviceQueueItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceQueueItemsResponse>>(PrepareAsyncGetQueueRaw(context, request, cq));
    }
    // GetNextFCntDown returns the next FCntDown to use for enqueing encrypted
    // downlinks. The difference with the DeviceActivation f_cont_down is that
    // this method takes potential existing queue-items into account.
    virtual ::grpc::Status GetNextFCntDown(::grpc::ClientContext* context, const ::api::GetDeviceNextFCntDownRequest& request, ::api::GetDeviceNextFCntDownResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceNextFCntDownResponse>> AsyncGetNextFCntDown(::grpc::ClientContext* context, const ::api::GetDeviceNextFCntDownRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceNextFCntDownResponse>>(AsyncGetNextFCntDownRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceNextFCntDownResponse>> PrepareAsyncGetNextFCntDown(::grpc::ClientContext* context, const ::api::GetDeviceNextFCntDownRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceNextFCntDownResponse>>(PrepareAsyncGetNextFCntDownRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // Create the given device.
      virtual void Create(::grpc::ClientContext* context, const ::api::CreateDeviceRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Create(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Create(::grpc::ClientContext* context, const ::api::CreateDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Create(::grpc::ClientContext* context, const ::api::CreateDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Create(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Create(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Get returns the device for the given DevEUI.
      virtual void Get(::grpc::ClientContext* context, const ::api::GetDeviceRequest* request, ::api::GetDeviceResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Get(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Get(::grpc::ClientContext* context, const ::api::GetDeviceRequest* request, ::api::GetDeviceResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Get(::grpc::ClientContext* context, const ::api::GetDeviceRequest* request, ::api::GetDeviceResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Get(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Get(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Update the given device.
      virtual void Update(::grpc::ClientContext* context, const ::api::UpdateDeviceRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Update(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Update(::grpc::ClientContext* context, const ::api::UpdateDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Update(::grpc::ClientContext* context, const ::api::UpdateDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Update(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Update(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Delete the device with the given DevEUI.
      virtual void Delete(::grpc::ClientContext* context, const ::api::DeleteDeviceRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Delete(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Delete(::grpc::ClientContext* context, const ::api::DeleteDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Delete(::grpc::ClientContext* context, const ::api::DeleteDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Delete(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Delete(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Get the list of devices.
      virtual void List(::grpc::ClientContext* context, const ::api::ListDevicesRequest* request, ::api::ListDevicesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void List(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::ListDevicesResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void List(::grpc::ClientContext* context, const ::api::ListDevicesRequest* request, ::api::ListDevicesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void List(::grpc::ClientContext* context, const ::api::ListDevicesRequest* request, ::api::ListDevicesResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void List(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::ListDevicesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void List(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::ListDevicesResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Create the given device-keys.
      virtual void CreateKeys(::grpc::ClientContext* context, const ::api::CreateDeviceKeysRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void CreateKeys(::grpc::ClientContext* context, const ::api::CreateDeviceKeysRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void CreateKeys(::grpc::ClientContext* context, const ::api::CreateDeviceKeysRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void CreateKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void CreateKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Get the device-keys for the given DevEUI.
      virtual void GetKeys(::grpc::ClientContext* context, const ::api::GetDeviceKeysRequest* request, ::api::GetDeviceKeysResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceKeysResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetKeys(::grpc::ClientContext* context, const ::api::GetDeviceKeysRequest* request, ::api::GetDeviceKeysResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetKeys(::grpc::ClientContext* context, const ::api::GetDeviceKeysRequest* request, ::api::GetDeviceKeysResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceKeysResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceKeysResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Update the given device-keys.
      virtual void UpdateKeys(::grpc::ClientContext* context, const ::api::UpdateDeviceKeysRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UpdateKeys(::grpc::ClientContext* context, const ::api::UpdateDeviceKeysRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UpdateKeys(::grpc::ClientContext* context, const ::api::UpdateDeviceKeysRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UpdateKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UpdateKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Delete the device-keys for the given DevEUI.
      virtual void DeleteKeys(::grpc::ClientContext* context, const ::api::DeleteDeviceKeysRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteKeys(::grpc::ClientContext* context, const ::api::DeleteDeviceKeysRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteKeys(::grpc::ClientContext* context, const ::api::DeleteDeviceKeysRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // FlushDevNonces flushes the OTAA device nonces.
      virtual void FlushDevNonces(::grpc::ClientContext* context, const ::api::FlushDevNoncesRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FlushDevNonces(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void FlushDevNonces(::grpc::ClientContext* context, const ::api::FlushDevNoncesRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void FlushDevNonces(::grpc::ClientContext* context, const ::api::FlushDevNoncesRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void FlushDevNonces(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void FlushDevNonces(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Activate (re)activates the device with the given parameters (for ABP or for
      // importing OTAA activations).
      virtual void Activate(::grpc::ClientContext* context, const ::api::ActivateDeviceRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Activate(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Activate(::grpc::ClientContext* context, const ::api::ActivateDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Activate(::grpc::ClientContext* context, const ::api::ActivateDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Activate(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Activate(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Deactivate de-activates the device.
      virtual void Deactivate(::grpc::ClientContext* context, const ::api::DeactivateDeviceRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Deactivate(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Deactivate(::grpc::ClientContext* context, const ::api::DeactivateDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Deactivate(::grpc::ClientContext* context, const ::api::DeactivateDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Deactivate(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Deactivate(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // GetActivation returns the current activation details of the device (OTAA or
      // ABP).
      virtual void GetActivation(::grpc::ClientContext* context, const ::api::GetDeviceActivationRequest* request, ::api::GetDeviceActivationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetActivation(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceActivationResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetActivation(::grpc::ClientContext* context, const ::api::GetDeviceActivationRequest* request, ::api::GetDeviceActivationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetActivation(::grpc::ClientContext* context, const ::api::GetDeviceActivationRequest* request, ::api::GetDeviceActivationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetActivation(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceActivationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetActivation(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceActivationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // GetRandomDevAddr returns a random DevAddr taking the NwkID prefix into
      // account.
      virtual void GetRandomDevAddr(::grpc::ClientContext* context, const ::api::GetRandomDevAddrRequest* request, ::api::GetRandomDevAddrResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRandomDevAddr(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetRandomDevAddrResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetRandomDevAddr(::grpc::ClientContext* context, const ::api::GetRandomDevAddrRequest* request, ::api::GetRandomDevAddrResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetRandomDevAddr(::grpc::ClientContext* context, const ::api::GetRandomDevAddrRequest* request, ::api::GetRandomDevAddrResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetRandomDevAddr(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetRandomDevAddrResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetRandomDevAddr(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetRandomDevAddrResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // GetMetrics returns the device metrics.
      // Note that this requires a device-profile with codec and measurements
      // configured.
      virtual void GetMetrics(::grpc::ClientContext* context, const ::api::GetDeviceMetricsRequest* request, ::api::GetDeviceMetricsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMetrics(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceMetricsResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetMetrics(::grpc::ClientContext* context, const ::api::GetDeviceMetricsRequest* request, ::api::GetDeviceMetricsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetMetrics(::grpc::ClientContext* context, const ::api::GetDeviceMetricsRequest* request, ::api::GetDeviceMetricsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetMetrics(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceMetricsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetMetrics(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceMetricsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // GetLinkMetrics returns the device link metrics.
      // This includes uplinks, downlinks, RSSI, SNR, etc...
      virtual void GetLinkMetrics(::grpc::ClientContext* context, const ::api::GetDeviceLinkMetricsRequest* request, ::api::GetDeviceLinkMetricsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetLinkMetrics(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceLinkMetricsResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetLinkMetrics(::grpc::ClientContext* context, const ::api::GetDeviceLinkMetricsRequest* request, ::api::GetDeviceLinkMetricsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetLinkMetrics(::grpc::ClientContext* context, const ::api::GetDeviceLinkMetricsRequest* request, ::api::GetDeviceLinkMetricsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetLinkMetrics(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceLinkMetricsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetLinkMetrics(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceLinkMetricsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Enqueue adds the given item to the downlink queue.
      virtual void Enqueue(::grpc::ClientContext* context, const ::api::EnqueueDeviceQueueItemRequest* request, ::api::EnqueueDeviceQueueItemResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Enqueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::EnqueueDeviceQueueItemResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Enqueue(::grpc::ClientContext* context, const ::api::EnqueueDeviceQueueItemRequest* request, ::api::EnqueueDeviceQueueItemResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Enqueue(::grpc::ClientContext* context, const ::api::EnqueueDeviceQueueItemRequest* request, ::api::EnqueueDeviceQueueItemResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Enqueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::EnqueueDeviceQueueItemResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Enqueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::EnqueueDeviceQueueItemResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // FlushQueue flushes the downlink device-queue.
      virtual void FlushQueue(::grpc::ClientContext* context, const ::api::FlushDeviceQueueRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FlushQueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void FlushQueue(::grpc::ClientContext* context, const ::api::FlushDeviceQueueRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void FlushQueue(::grpc::ClientContext* context, const ::api::FlushDeviceQueueRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void FlushQueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void FlushQueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // GetQueue returns the downlink device-queue.
      virtual void GetQueue(::grpc::ClientContext* context, const ::api::GetDeviceQueueItemsRequest* request, ::api::GetDeviceQueueItemsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetQueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceQueueItemsResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetQueue(::grpc::ClientContext* context, const ::api::GetDeviceQueueItemsRequest* request, ::api::GetDeviceQueueItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetQueue(::grpc::ClientContext* context, const ::api::GetDeviceQueueItemsRequest* request, ::api::GetDeviceQueueItemsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetQueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceQueueItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetQueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceQueueItemsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // GetNextFCntDown returns the next FCntDown to use for enqueing encrypted
      // downlinks. The difference with the DeviceActivation f_cont_down is that
      // this method takes potential existing queue-items into account.
      virtual void GetNextFCntDown(::grpc::ClientContext* context, const ::api::GetDeviceNextFCntDownRequest* request, ::api::GetDeviceNextFCntDownResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetNextFCntDown(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceNextFCntDownResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetNextFCntDown(::grpc::ClientContext* context, const ::api::GetDeviceNextFCntDownRequest* request, ::api::GetDeviceNextFCntDownResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetNextFCntDown(::grpc::ClientContext* context, const ::api::GetDeviceNextFCntDownRequest* request, ::api::GetDeviceNextFCntDownResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetNextFCntDown(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceNextFCntDownResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetNextFCntDown(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceNextFCntDownResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
    };
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    typedef class experimental_async_interface async_interface;
    #endif
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    async_interface* async() { return experimental_async(); }
    #endif
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncCreateRaw(::grpc::ClientContext* context, const ::api::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncCreateRaw(::grpc::ClientContext* context, const ::api::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceResponse>* AsyncGetRaw(::grpc::ClientContext* context, const ::api::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceResponse>* PrepareAsyncGetRaw(::grpc::ClientContext* context, const ::api::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncUpdateRaw(::grpc::ClientContext* context, const ::api::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncUpdateRaw(::grpc::ClientContext* context, const ::api::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteRaw(::grpc::ClientContext* context, const ::api::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteRaw(::grpc::ClientContext* context, const ::api::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::ListDevicesResponse>* AsyncListRaw(::grpc::ClientContext* context, const ::api::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::ListDevicesResponse>* PrepareAsyncListRaw(::grpc::ClientContext* context, const ::api::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncCreateKeysRaw(::grpc::ClientContext* context, const ::api::CreateDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncCreateKeysRaw(::grpc::ClientContext* context, const ::api::CreateDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceKeysResponse>* AsyncGetKeysRaw(::grpc::ClientContext* context, const ::api::GetDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceKeysResponse>* PrepareAsyncGetKeysRaw(::grpc::ClientContext* context, const ::api::GetDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncUpdateKeysRaw(::grpc::ClientContext* context, const ::api::UpdateDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncUpdateKeysRaw(::grpc::ClientContext* context, const ::api::UpdateDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteKeysRaw(::grpc::ClientContext* context, const ::api::DeleteDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteKeysRaw(::grpc::ClientContext* context, const ::api::DeleteDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncFlushDevNoncesRaw(::grpc::ClientContext* context, const ::api::FlushDevNoncesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncFlushDevNoncesRaw(::grpc::ClientContext* context, const ::api::FlushDevNoncesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncActivateRaw(::grpc::ClientContext* context, const ::api::ActivateDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncActivateRaw(::grpc::ClientContext* context, const ::api::ActivateDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeactivateRaw(::grpc::ClientContext* context, const ::api::DeactivateDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeactivateRaw(::grpc::ClientContext* context, const ::api::DeactivateDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceActivationResponse>* AsyncGetActivationRaw(::grpc::ClientContext* context, const ::api::GetDeviceActivationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceActivationResponse>* PrepareAsyncGetActivationRaw(::grpc::ClientContext* context, const ::api::GetDeviceActivationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::GetRandomDevAddrResponse>* AsyncGetRandomDevAddrRaw(::grpc::ClientContext* context, const ::api::GetRandomDevAddrRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::GetRandomDevAddrResponse>* PrepareAsyncGetRandomDevAddrRaw(::grpc::ClientContext* context, const ::api::GetRandomDevAddrRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceMetricsResponse>* AsyncGetMetricsRaw(::grpc::ClientContext* context, const ::api::GetDeviceMetricsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceMetricsResponse>* PrepareAsyncGetMetricsRaw(::grpc::ClientContext* context, const ::api::GetDeviceMetricsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceLinkMetricsResponse>* AsyncGetLinkMetricsRaw(::grpc::ClientContext* context, const ::api::GetDeviceLinkMetricsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceLinkMetricsResponse>* PrepareAsyncGetLinkMetricsRaw(::grpc::ClientContext* context, const ::api::GetDeviceLinkMetricsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::EnqueueDeviceQueueItemResponse>* AsyncEnqueueRaw(::grpc::ClientContext* context, const ::api::EnqueueDeviceQueueItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::EnqueueDeviceQueueItemResponse>* PrepareAsyncEnqueueRaw(::grpc::ClientContext* context, const ::api::EnqueueDeviceQueueItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncFlushQueueRaw(::grpc::ClientContext* context, const ::api::FlushDeviceQueueRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncFlushQueueRaw(::grpc::ClientContext* context, const ::api::FlushDeviceQueueRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceQueueItemsResponse>* AsyncGetQueueRaw(::grpc::ClientContext* context, const ::api::GetDeviceQueueItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceQueueItemsResponse>* PrepareAsyncGetQueueRaw(::grpc::ClientContext* context, const ::api::GetDeviceQueueItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceNextFCntDownResponse>* AsyncGetNextFCntDownRaw(::grpc::ClientContext* context, const ::api::GetDeviceNextFCntDownRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::GetDeviceNextFCntDownResponse>* PrepareAsyncGetNextFCntDownRaw(::grpc::ClientContext* context, const ::api::GetDeviceNextFCntDownRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status Create(::grpc::ClientContext* context, const ::api::CreateDeviceRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncCreate(::grpc::ClientContext* context, const ::api::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncCreateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncCreate(::grpc::ClientContext* context, const ::api::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncCreateRaw(context, request, cq));
    }
    ::grpc::Status Get(::grpc::ClientContext* context, const ::api::GetDeviceRequest& request, ::api::GetDeviceResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceResponse>> AsyncGet(::grpc::ClientContext* context, const ::api::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceResponse>>(AsyncGetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceResponse>> PrepareAsyncGet(::grpc::ClientContext* context, const ::api::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceResponse>>(PrepareAsyncGetRaw(context, request, cq));
    }
    ::grpc::Status Update(::grpc::ClientContext* context, const ::api::UpdateDeviceRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncUpdate(::grpc::ClientContext* context, const ::api::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncUpdateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncUpdate(::grpc::ClientContext* context, const ::api::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncUpdateRaw(context, request, cq));
    }
    ::grpc::Status Delete(::grpc::ClientContext* context, const ::api::DeleteDeviceRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDelete(::grpc::ClientContext* context, const ::api::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDelete(::grpc::ClientContext* context, const ::api::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteRaw(context, request, cq));
    }
    ::grpc::Status List(::grpc::ClientContext* context, const ::api::ListDevicesRequest& request, ::api::ListDevicesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::ListDevicesResponse>> AsyncList(::grpc::ClientContext* context, const ::api::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::ListDevicesResponse>>(AsyncListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::ListDevicesResponse>> PrepareAsyncList(::grpc::ClientContext* context, const ::api::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::ListDevicesResponse>>(PrepareAsyncListRaw(context, request, cq));
    }
    ::grpc::Status CreateKeys(::grpc::ClientContext* context, const ::api::CreateDeviceKeysRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncCreateKeys(::grpc::ClientContext* context, const ::api::CreateDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncCreateKeysRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncCreateKeys(::grpc::ClientContext* context, const ::api::CreateDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncCreateKeysRaw(context, request, cq));
    }
    ::grpc::Status GetKeys(::grpc::ClientContext* context, const ::api::GetDeviceKeysRequest& request, ::api::GetDeviceKeysResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceKeysResponse>> AsyncGetKeys(::grpc::ClientContext* context, const ::api::GetDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceKeysResponse>>(AsyncGetKeysRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceKeysResponse>> PrepareAsyncGetKeys(::grpc::ClientContext* context, const ::api::GetDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceKeysResponse>>(PrepareAsyncGetKeysRaw(context, request, cq));
    }
    ::grpc::Status UpdateKeys(::grpc::ClientContext* context, const ::api::UpdateDeviceKeysRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncUpdateKeys(::grpc::ClientContext* context, const ::api::UpdateDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncUpdateKeysRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncUpdateKeys(::grpc::ClientContext* context, const ::api::UpdateDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncUpdateKeysRaw(context, request, cq));
    }
    ::grpc::Status DeleteKeys(::grpc::ClientContext* context, const ::api::DeleteDeviceKeysRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteKeys(::grpc::ClientContext* context, const ::api::DeleteDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteKeysRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteKeys(::grpc::ClientContext* context, const ::api::DeleteDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteKeysRaw(context, request, cq));
    }
    ::grpc::Status FlushDevNonces(::grpc::ClientContext* context, const ::api::FlushDevNoncesRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncFlushDevNonces(::grpc::ClientContext* context, const ::api::FlushDevNoncesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncFlushDevNoncesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncFlushDevNonces(::grpc::ClientContext* context, const ::api::FlushDevNoncesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncFlushDevNoncesRaw(context, request, cq));
    }
    ::grpc::Status Activate(::grpc::ClientContext* context, const ::api::ActivateDeviceRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncActivate(::grpc::ClientContext* context, const ::api::ActivateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncActivateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncActivate(::grpc::ClientContext* context, const ::api::ActivateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncActivateRaw(context, request, cq));
    }
    ::grpc::Status Deactivate(::grpc::ClientContext* context, const ::api::DeactivateDeviceRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeactivate(::grpc::ClientContext* context, const ::api::DeactivateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeactivateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeactivate(::grpc::ClientContext* context, const ::api::DeactivateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeactivateRaw(context, request, cq));
    }
    ::grpc::Status GetActivation(::grpc::ClientContext* context, const ::api::GetDeviceActivationRequest& request, ::api::GetDeviceActivationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceActivationResponse>> AsyncGetActivation(::grpc::ClientContext* context, const ::api::GetDeviceActivationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceActivationResponse>>(AsyncGetActivationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceActivationResponse>> PrepareAsyncGetActivation(::grpc::ClientContext* context, const ::api::GetDeviceActivationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceActivationResponse>>(PrepareAsyncGetActivationRaw(context, request, cq));
    }
    ::grpc::Status GetRandomDevAddr(::grpc::ClientContext* context, const ::api::GetRandomDevAddrRequest& request, ::api::GetRandomDevAddrResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetRandomDevAddrResponse>> AsyncGetRandomDevAddr(::grpc::ClientContext* context, const ::api::GetRandomDevAddrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetRandomDevAddrResponse>>(AsyncGetRandomDevAddrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetRandomDevAddrResponse>> PrepareAsyncGetRandomDevAddr(::grpc::ClientContext* context, const ::api::GetRandomDevAddrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetRandomDevAddrResponse>>(PrepareAsyncGetRandomDevAddrRaw(context, request, cq));
    }
    ::grpc::Status GetMetrics(::grpc::ClientContext* context, const ::api::GetDeviceMetricsRequest& request, ::api::GetDeviceMetricsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceMetricsResponse>> AsyncGetMetrics(::grpc::ClientContext* context, const ::api::GetDeviceMetricsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceMetricsResponse>>(AsyncGetMetricsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceMetricsResponse>> PrepareAsyncGetMetrics(::grpc::ClientContext* context, const ::api::GetDeviceMetricsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceMetricsResponse>>(PrepareAsyncGetMetricsRaw(context, request, cq));
    }
    ::grpc::Status GetLinkMetrics(::grpc::ClientContext* context, const ::api::GetDeviceLinkMetricsRequest& request, ::api::GetDeviceLinkMetricsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceLinkMetricsResponse>> AsyncGetLinkMetrics(::grpc::ClientContext* context, const ::api::GetDeviceLinkMetricsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceLinkMetricsResponse>>(AsyncGetLinkMetricsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceLinkMetricsResponse>> PrepareAsyncGetLinkMetrics(::grpc::ClientContext* context, const ::api::GetDeviceLinkMetricsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceLinkMetricsResponse>>(PrepareAsyncGetLinkMetricsRaw(context, request, cq));
    }
    ::grpc::Status Enqueue(::grpc::ClientContext* context, const ::api::EnqueueDeviceQueueItemRequest& request, ::api::EnqueueDeviceQueueItemResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::EnqueueDeviceQueueItemResponse>> AsyncEnqueue(::grpc::ClientContext* context, const ::api::EnqueueDeviceQueueItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::EnqueueDeviceQueueItemResponse>>(AsyncEnqueueRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::EnqueueDeviceQueueItemResponse>> PrepareAsyncEnqueue(::grpc::ClientContext* context, const ::api::EnqueueDeviceQueueItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::EnqueueDeviceQueueItemResponse>>(PrepareAsyncEnqueueRaw(context, request, cq));
    }
    ::grpc::Status FlushQueue(::grpc::ClientContext* context, const ::api::FlushDeviceQueueRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncFlushQueue(::grpc::ClientContext* context, const ::api::FlushDeviceQueueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncFlushQueueRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncFlushQueue(::grpc::ClientContext* context, const ::api::FlushDeviceQueueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncFlushQueueRaw(context, request, cq));
    }
    ::grpc::Status GetQueue(::grpc::ClientContext* context, const ::api::GetDeviceQueueItemsRequest& request, ::api::GetDeviceQueueItemsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceQueueItemsResponse>> AsyncGetQueue(::grpc::ClientContext* context, const ::api::GetDeviceQueueItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceQueueItemsResponse>>(AsyncGetQueueRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceQueueItemsResponse>> PrepareAsyncGetQueue(::grpc::ClientContext* context, const ::api::GetDeviceQueueItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceQueueItemsResponse>>(PrepareAsyncGetQueueRaw(context, request, cq));
    }
    ::grpc::Status GetNextFCntDown(::grpc::ClientContext* context, const ::api::GetDeviceNextFCntDownRequest& request, ::api::GetDeviceNextFCntDownResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceNextFCntDownResponse>> AsyncGetNextFCntDown(::grpc::ClientContext* context, const ::api::GetDeviceNextFCntDownRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceNextFCntDownResponse>>(AsyncGetNextFCntDownRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceNextFCntDownResponse>> PrepareAsyncGetNextFCntDown(::grpc::ClientContext* context, const ::api::GetDeviceNextFCntDownRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::GetDeviceNextFCntDownResponse>>(PrepareAsyncGetNextFCntDownRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void Create(::grpc::ClientContext* context, const ::api::CreateDeviceRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Create(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Create(::grpc::ClientContext* context, const ::api::CreateDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Create(::grpc::ClientContext* context, const ::api::CreateDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Create(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Create(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void Get(::grpc::ClientContext* context, const ::api::GetDeviceRequest* request, ::api::GetDeviceResponse* response, std::function<void(::grpc::Status)>) override;
      void Get(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Get(::grpc::ClientContext* context, const ::api::GetDeviceRequest* request, ::api::GetDeviceResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Get(::grpc::ClientContext* context, const ::api::GetDeviceRequest* request, ::api::GetDeviceResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Get(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Get(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void Update(::grpc::ClientContext* context, const ::api::UpdateDeviceRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Update(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Update(::grpc::ClientContext* context, const ::api::UpdateDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Update(::grpc::ClientContext* context, const ::api::UpdateDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Update(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Update(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void Delete(::grpc::ClientContext* context, const ::api::DeleteDeviceRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Delete(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Delete(::grpc::ClientContext* context, const ::api::DeleteDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Delete(::grpc::ClientContext* context, const ::api::DeleteDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Delete(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Delete(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void List(::grpc::ClientContext* context, const ::api::ListDevicesRequest* request, ::api::ListDevicesResponse* response, std::function<void(::grpc::Status)>) override;
      void List(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::ListDevicesResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void List(::grpc::ClientContext* context, const ::api::ListDevicesRequest* request, ::api::ListDevicesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void List(::grpc::ClientContext* context, const ::api::ListDevicesRequest* request, ::api::ListDevicesResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void List(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::ListDevicesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void List(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::ListDevicesResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void CreateKeys(::grpc::ClientContext* context, const ::api::CreateDeviceKeysRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void CreateKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void CreateKeys(::grpc::ClientContext* context, const ::api::CreateDeviceKeysRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void CreateKeys(::grpc::ClientContext* context, const ::api::CreateDeviceKeysRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void CreateKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void CreateKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetKeys(::grpc::ClientContext* context, const ::api::GetDeviceKeysRequest* request, ::api::GetDeviceKeysResponse* response, std::function<void(::grpc::Status)>) override;
      void GetKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceKeysResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetKeys(::grpc::ClientContext* context, const ::api::GetDeviceKeysRequest* request, ::api::GetDeviceKeysResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetKeys(::grpc::ClientContext* context, const ::api::GetDeviceKeysRequest* request, ::api::GetDeviceKeysResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceKeysResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceKeysResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UpdateKeys(::grpc::ClientContext* context, const ::api::UpdateDeviceKeysRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void UpdateKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UpdateKeys(::grpc::ClientContext* context, const ::api::UpdateDeviceKeysRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UpdateKeys(::grpc::ClientContext* context, const ::api::UpdateDeviceKeysRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UpdateKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UpdateKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteKeys(::grpc::ClientContext* context, const ::api::DeleteDeviceKeysRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteKeys(::grpc::ClientContext* context, const ::api::DeleteDeviceKeysRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteKeys(::grpc::ClientContext* context, const ::api::DeleteDeviceKeysRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteKeys(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void FlushDevNonces(::grpc::ClientContext* context, const ::api::FlushDevNoncesRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void FlushDevNonces(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void FlushDevNonces(::grpc::ClientContext* context, const ::api::FlushDevNoncesRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void FlushDevNonces(::grpc::ClientContext* context, const ::api::FlushDevNoncesRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void FlushDevNonces(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void FlushDevNonces(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void Activate(::grpc::ClientContext* context, const ::api::ActivateDeviceRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Activate(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Activate(::grpc::ClientContext* context, const ::api::ActivateDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Activate(::grpc::ClientContext* context, const ::api::ActivateDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Activate(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Activate(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void Deactivate(::grpc::ClientContext* context, const ::api::DeactivateDeviceRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Deactivate(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Deactivate(::grpc::ClientContext* context, const ::api::DeactivateDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Deactivate(::grpc::ClientContext* context, const ::api::DeactivateDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Deactivate(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Deactivate(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetActivation(::grpc::ClientContext* context, const ::api::GetDeviceActivationRequest* request, ::api::GetDeviceActivationResponse* response, std::function<void(::grpc::Status)>) override;
      void GetActivation(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceActivationResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetActivation(::grpc::ClientContext* context, const ::api::GetDeviceActivationRequest* request, ::api::GetDeviceActivationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetActivation(::grpc::ClientContext* context, const ::api::GetDeviceActivationRequest* request, ::api::GetDeviceActivationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetActivation(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceActivationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetActivation(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceActivationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetRandomDevAddr(::grpc::ClientContext* context, const ::api::GetRandomDevAddrRequest* request, ::api::GetRandomDevAddrResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRandomDevAddr(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetRandomDevAddrResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetRandomDevAddr(::grpc::ClientContext* context, const ::api::GetRandomDevAddrRequest* request, ::api::GetRandomDevAddrResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetRandomDevAddr(::grpc::ClientContext* context, const ::api::GetRandomDevAddrRequest* request, ::api::GetRandomDevAddrResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetRandomDevAddr(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetRandomDevAddrResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetRandomDevAddr(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetRandomDevAddrResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetMetrics(::grpc::ClientContext* context, const ::api::GetDeviceMetricsRequest* request, ::api::GetDeviceMetricsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetMetrics(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceMetricsResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetMetrics(::grpc::ClientContext* context, const ::api::GetDeviceMetricsRequest* request, ::api::GetDeviceMetricsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetMetrics(::grpc::ClientContext* context, const ::api::GetDeviceMetricsRequest* request, ::api::GetDeviceMetricsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetMetrics(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceMetricsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetMetrics(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceMetricsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetLinkMetrics(::grpc::ClientContext* context, const ::api::GetDeviceLinkMetricsRequest* request, ::api::GetDeviceLinkMetricsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetLinkMetrics(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceLinkMetricsResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetLinkMetrics(::grpc::ClientContext* context, const ::api::GetDeviceLinkMetricsRequest* request, ::api::GetDeviceLinkMetricsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetLinkMetrics(::grpc::ClientContext* context, const ::api::GetDeviceLinkMetricsRequest* request, ::api::GetDeviceLinkMetricsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetLinkMetrics(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceLinkMetricsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetLinkMetrics(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceLinkMetricsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void Enqueue(::grpc::ClientContext* context, const ::api::EnqueueDeviceQueueItemRequest* request, ::api::EnqueueDeviceQueueItemResponse* response, std::function<void(::grpc::Status)>) override;
      void Enqueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::EnqueueDeviceQueueItemResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Enqueue(::grpc::ClientContext* context, const ::api::EnqueueDeviceQueueItemRequest* request, ::api::EnqueueDeviceQueueItemResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Enqueue(::grpc::ClientContext* context, const ::api::EnqueueDeviceQueueItemRequest* request, ::api::EnqueueDeviceQueueItemResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Enqueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::EnqueueDeviceQueueItemResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Enqueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::EnqueueDeviceQueueItemResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void FlushQueue(::grpc::ClientContext* context, const ::api::FlushDeviceQueueRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void FlushQueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void FlushQueue(::grpc::ClientContext* context, const ::api::FlushDeviceQueueRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void FlushQueue(::grpc::ClientContext* context, const ::api::FlushDeviceQueueRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void FlushQueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void FlushQueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetQueue(::grpc::ClientContext* context, const ::api::GetDeviceQueueItemsRequest* request, ::api::GetDeviceQueueItemsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetQueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceQueueItemsResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetQueue(::grpc::ClientContext* context, const ::api::GetDeviceQueueItemsRequest* request, ::api::GetDeviceQueueItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetQueue(::grpc::ClientContext* context, const ::api::GetDeviceQueueItemsRequest* request, ::api::GetDeviceQueueItemsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetQueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceQueueItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetQueue(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceQueueItemsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetNextFCntDown(::grpc::ClientContext* context, const ::api::GetDeviceNextFCntDownRequest* request, ::api::GetDeviceNextFCntDownResponse* response, std::function<void(::grpc::Status)>) override;
      void GetNextFCntDown(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceNextFCntDownResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetNextFCntDown(::grpc::ClientContext* context, const ::api::GetDeviceNextFCntDownRequest* request, ::api::GetDeviceNextFCntDownResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetNextFCntDown(::grpc::ClientContext* context, const ::api::GetDeviceNextFCntDownRequest* request, ::api::GetDeviceNextFCntDownResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetNextFCntDown(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceNextFCntDownResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetNextFCntDown(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::api::GetDeviceNextFCntDownResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncCreateRaw(::grpc::ClientContext* context, const ::api::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncCreateRaw(::grpc::ClientContext* context, const ::api::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::GetDeviceResponse>* AsyncGetRaw(::grpc::ClientContext* context, const ::api::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::GetDeviceResponse>* PrepareAsyncGetRaw(::grpc::ClientContext* context, const ::api::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncUpdateRaw(::grpc::ClientContext* context, const ::api::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncUpdateRaw(::grpc::ClientContext* context, const ::api::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteRaw(::grpc::ClientContext* context, const ::api::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteRaw(::grpc::ClientContext* context, const ::api::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::ListDevicesResponse>* AsyncListRaw(::grpc::ClientContext* context, const ::api::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::ListDevicesResponse>* PrepareAsyncListRaw(::grpc::ClientContext* context, const ::api::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncCreateKeysRaw(::grpc::ClientContext* context, const ::api::CreateDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncCreateKeysRaw(::grpc::ClientContext* context, const ::api::CreateDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::GetDeviceKeysResponse>* AsyncGetKeysRaw(::grpc::ClientContext* context, const ::api::GetDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::GetDeviceKeysResponse>* PrepareAsyncGetKeysRaw(::grpc::ClientContext* context, const ::api::GetDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncUpdateKeysRaw(::grpc::ClientContext* context, const ::api::UpdateDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncUpdateKeysRaw(::grpc::ClientContext* context, const ::api::UpdateDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteKeysRaw(::grpc::ClientContext* context, const ::api::DeleteDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteKeysRaw(::grpc::ClientContext* context, const ::api::DeleteDeviceKeysRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncFlushDevNoncesRaw(::grpc::ClientContext* context, const ::api::FlushDevNoncesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncFlushDevNoncesRaw(::grpc::ClientContext* context, const ::api::FlushDevNoncesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncActivateRaw(::grpc::ClientContext* context, const ::api::ActivateDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncActivateRaw(::grpc::ClientContext* context, const ::api::ActivateDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeactivateRaw(::grpc::ClientContext* context, const ::api::DeactivateDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeactivateRaw(::grpc::ClientContext* context, const ::api::DeactivateDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::GetDeviceActivationResponse>* AsyncGetActivationRaw(::grpc::ClientContext* context, const ::api::GetDeviceActivationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::GetDeviceActivationResponse>* PrepareAsyncGetActivationRaw(::grpc::ClientContext* context, const ::api::GetDeviceActivationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::GetRandomDevAddrResponse>* AsyncGetRandomDevAddrRaw(::grpc::ClientContext* context, const ::api::GetRandomDevAddrRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::GetRandomDevAddrResponse>* PrepareAsyncGetRandomDevAddrRaw(::grpc::ClientContext* context, const ::api::GetRandomDevAddrRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::GetDeviceMetricsResponse>* AsyncGetMetricsRaw(::grpc::ClientContext* context, const ::api::GetDeviceMetricsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::GetDeviceMetricsResponse>* PrepareAsyncGetMetricsRaw(::grpc::ClientContext* context, const ::api::GetDeviceMetricsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::GetDeviceLinkMetricsResponse>* AsyncGetLinkMetricsRaw(::grpc::ClientContext* context, const ::api::GetDeviceLinkMetricsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::GetDeviceLinkMetricsResponse>* PrepareAsyncGetLinkMetricsRaw(::grpc::ClientContext* context, const ::api::GetDeviceLinkMetricsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::EnqueueDeviceQueueItemResponse>* AsyncEnqueueRaw(::grpc::ClientContext* context, const ::api::EnqueueDeviceQueueItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::EnqueueDeviceQueueItemResponse>* PrepareAsyncEnqueueRaw(::grpc::ClientContext* context, const ::api::EnqueueDeviceQueueItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncFlushQueueRaw(::grpc::ClientContext* context, const ::api::FlushDeviceQueueRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncFlushQueueRaw(::grpc::ClientContext* context, const ::api::FlushDeviceQueueRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::GetDeviceQueueItemsResponse>* AsyncGetQueueRaw(::grpc::ClientContext* context, const ::api::GetDeviceQueueItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::GetDeviceQueueItemsResponse>* PrepareAsyncGetQueueRaw(::grpc::ClientContext* context, const ::api::GetDeviceQueueItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::GetDeviceNextFCntDownResponse>* AsyncGetNextFCntDownRaw(::grpc::ClientContext* context, const ::api::GetDeviceNextFCntDownRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::GetDeviceNextFCntDownResponse>* PrepareAsyncGetNextFCntDownRaw(::grpc::ClientContext* context, const ::api::GetDeviceNextFCntDownRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Create_;
    const ::grpc::internal::RpcMethod rpcmethod_Get_;
    const ::grpc::internal::RpcMethod rpcmethod_Update_;
    const ::grpc::internal::RpcMethod rpcmethod_Delete_;
    const ::grpc::internal::RpcMethod rpcmethod_List_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateKeys_;
    const ::grpc::internal::RpcMethod rpcmethod_GetKeys_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateKeys_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteKeys_;
    const ::grpc::internal::RpcMethod rpcmethod_FlushDevNonces_;
    const ::grpc::internal::RpcMethod rpcmethod_Activate_;
    const ::grpc::internal::RpcMethod rpcmethod_Deactivate_;
    const ::grpc::internal::RpcMethod rpcmethod_GetActivation_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRandomDevAddr_;
    const ::grpc::internal::RpcMethod rpcmethod_GetMetrics_;
    const ::grpc::internal::RpcMethod rpcmethod_GetLinkMetrics_;
    const ::grpc::internal::RpcMethod rpcmethod_Enqueue_;
    const ::grpc::internal::RpcMethod rpcmethod_FlushQueue_;
    const ::grpc::internal::RpcMethod rpcmethod_GetQueue_;
    const ::grpc::internal::RpcMethod rpcmethod_GetNextFCntDown_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Create the given device.
    virtual ::grpc::Status Create(::grpc::ServerContext* context, const ::api::CreateDeviceRequest* request, ::google::protobuf::Empty* response);
    // Get returns the device for the given DevEUI.
    virtual ::grpc::Status Get(::grpc::ServerContext* context, const ::api::GetDeviceRequest* request, ::api::GetDeviceResponse* response);
    // Update the given device.
    virtual ::grpc::Status Update(::grpc::ServerContext* context, const ::api::UpdateDeviceRequest* request, ::google::protobuf::Empty* response);
    // Delete the device with the given DevEUI.
    virtual ::grpc::Status Delete(::grpc::ServerContext* context, const ::api::DeleteDeviceRequest* request, ::google::protobuf::Empty* response);
    // Get the list of devices.
    virtual ::grpc::Status List(::grpc::ServerContext* context, const ::api::ListDevicesRequest* request, ::api::ListDevicesResponse* response);
    // Create the given device-keys.
    virtual ::grpc::Status CreateKeys(::grpc::ServerContext* context, const ::api::CreateDeviceKeysRequest* request, ::google::protobuf::Empty* response);
    // Get the device-keys for the given DevEUI.
    virtual ::grpc::Status GetKeys(::grpc::ServerContext* context, const ::api::GetDeviceKeysRequest* request, ::api::GetDeviceKeysResponse* response);
    // Update the given device-keys.
    virtual ::grpc::Status UpdateKeys(::grpc::ServerContext* context, const ::api::UpdateDeviceKeysRequest* request, ::google::protobuf::Empty* response);
    // Delete the device-keys for the given DevEUI.
    virtual ::grpc::Status DeleteKeys(::grpc::ServerContext* context, const ::api::DeleteDeviceKeysRequest* request, ::google::protobuf::Empty* response);
    // FlushDevNonces flushes the OTAA device nonces.
    virtual ::grpc::Status FlushDevNonces(::grpc::ServerContext* context, const ::api::FlushDevNoncesRequest* request, ::google::protobuf::Empty* response);
    // Activate (re)activates the device with the given parameters (for ABP or for
    // importing OTAA activations).
    virtual ::grpc::Status Activate(::grpc::ServerContext* context, const ::api::ActivateDeviceRequest* request, ::google::protobuf::Empty* response);
    // Deactivate de-activates the device.
    virtual ::grpc::Status Deactivate(::grpc::ServerContext* context, const ::api::DeactivateDeviceRequest* request, ::google::protobuf::Empty* response);
    // GetActivation returns the current activation details of the device (OTAA or
    // ABP).
    virtual ::grpc::Status GetActivation(::grpc::ServerContext* context, const ::api::GetDeviceActivationRequest* request, ::api::GetDeviceActivationResponse* response);
    // GetRandomDevAddr returns a random DevAddr taking the NwkID prefix into
    // account.
    virtual ::grpc::Status GetRandomDevAddr(::grpc::ServerContext* context, const ::api::GetRandomDevAddrRequest* request, ::api::GetRandomDevAddrResponse* response);
    // GetMetrics returns the device metrics.
    // Note that this requires a device-profile with codec and measurements
    // configured.
    virtual ::grpc::Status GetMetrics(::grpc::ServerContext* context, const ::api::GetDeviceMetricsRequest* request, ::api::GetDeviceMetricsResponse* response);
    // GetLinkMetrics returns the device link metrics.
    // This includes uplinks, downlinks, RSSI, SNR, etc...
    virtual ::grpc::Status GetLinkMetrics(::grpc::ServerContext* context, const ::api::GetDeviceLinkMetricsRequest* request, ::api::GetDeviceLinkMetricsResponse* response);
    // Enqueue adds the given item to the downlink queue.
    virtual ::grpc::Status Enqueue(::grpc::ServerContext* context, const ::api::EnqueueDeviceQueueItemRequest* request, ::api::EnqueueDeviceQueueItemResponse* response);
    // FlushQueue flushes the downlink device-queue.
    virtual ::grpc::Status FlushQueue(::grpc::ServerContext* context, const ::api::FlushDeviceQueueRequest* request, ::google::protobuf::Empty* response);
    // GetQueue returns the downlink device-queue.
    virtual ::grpc::Status GetQueue(::grpc::ServerContext* context, const ::api::GetDeviceQueueItemsRequest* request, ::api::GetDeviceQueueItemsResponse* response);
    // GetNextFCntDown returns the next FCntDown to use for enqueing encrypted
    // downlinks. The difference with the DeviceActivation f_cont_down is that
    // this method takes potential existing queue-items into account.
    virtual ::grpc::Status GetNextFCntDown(::grpc::ServerContext* context, const ::api::GetDeviceNextFCntDownRequest* request, ::api::GetDeviceNextFCntDownResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Create() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::api::CreateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreate(::grpc::ServerContext* context, ::api::CreateDeviceRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Get() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::api::GetDeviceRequest* /*request*/, ::api::GetDeviceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGet(::grpc::ServerContext* context, ::api::GetDeviceRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::GetDeviceResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Update() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_Update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Update(::grpc::ServerContext* /*context*/, const ::api::UpdateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdate(::grpc::ServerContext* context, ::api::UpdateDeviceRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Delete() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::api::DeleteDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelete(::grpc::ServerContext* context, ::api::DeleteDeviceRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_List() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::api::ListDevicesRequest* /*request*/, ::api::ListDevicesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestList(::grpc::ServerContext* context, ::api::ListDevicesRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::ListDevicesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateKeys() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_CreateKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateKeys(::grpc::ServerContext* /*context*/, const ::api::CreateDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateKeys(::grpc::ServerContext* context, ::api::CreateDeviceKeysRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetKeys() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetKeys(::grpc::ServerContext* /*context*/, const ::api::GetDeviceKeysRequest* /*request*/, ::api::GetDeviceKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetKeys(::grpc::ServerContext* context, ::api::GetDeviceKeysRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::GetDeviceKeysResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateKeys() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_UpdateKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateKeys(::grpc::ServerContext* /*context*/, const ::api::UpdateDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateKeys(::grpc::ServerContext* context, ::api::UpdateDeviceKeysRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteKeys() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_DeleteKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteKeys(::grpc::ServerContext* /*context*/, const ::api::DeleteDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteKeys(::grpc::ServerContext* context, ::api::DeleteDeviceKeysRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FlushDevNonces : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FlushDevNonces() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_FlushDevNonces() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FlushDevNonces(::grpc::ServerContext* /*context*/, const ::api::FlushDevNoncesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFlushDevNonces(::grpc::ServerContext* context, ::api::FlushDevNoncesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Activate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Activate() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_Activate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Activate(::grpc::ServerContext* /*context*/, const ::api::ActivateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestActivate(::grpc::ServerContext* context, ::api::ActivateDeviceRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Deactivate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Deactivate() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_Deactivate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Deactivate(::grpc::ServerContext* /*context*/, const ::api::DeactivateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeactivate(::grpc::ServerContext* context, ::api::DeactivateDeviceRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetActivation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetActivation() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_GetActivation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActivation(::grpc::ServerContext* /*context*/, const ::api::GetDeviceActivationRequest* /*request*/, ::api::GetDeviceActivationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetActivation(::grpc::ServerContext* context, ::api::GetDeviceActivationRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::GetDeviceActivationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRandomDevAddr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRandomDevAddr() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetRandomDevAddr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRandomDevAddr(::grpc::ServerContext* /*context*/, const ::api::GetRandomDevAddrRequest* /*request*/, ::api::GetRandomDevAddrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRandomDevAddr(::grpc::ServerContext* context, ::api::GetRandomDevAddrRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::GetRandomDevAddrResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMetrics() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_GetMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMetrics(::grpc::ServerContext* /*context*/, const ::api::GetDeviceMetricsRequest* /*request*/, ::api::GetDeviceMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMetrics(::grpc::ServerContext* context, ::api::GetDeviceMetricsRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::GetDeviceMetricsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetLinkMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetLinkMetrics() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_GetLinkMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLinkMetrics(::grpc::ServerContext* /*context*/, const ::api::GetDeviceLinkMetricsRequest* /*request*/, ::api::GetDeviceLinkMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLinkMetrics(::grpc::ServerContext* context, ::api::GetDeviceLinkMetricsRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::GetDeviceLinkMetricsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Enqueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Enqueue() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_Enqueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Enqueue(::grpc::ServerContext* /*context*/, const ::api::EnqueueDeviceQueueItemRequest* /*request*/, ::api::EnqueueDeviceQueueItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEnqueue(::grpc::ServerContext* context, ::api::EnqueueDeviceQueueItemRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::EnqueueDeviceQueueItemResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FlushQueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FlushQueue() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_FlushQueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FlushQueue(::grpc::ServerContext* /*context*/, const ::api::FlushDeviceQueueRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFlushQueue(::grpc::ServerContext* context, ::api::FlushDeviceQueueRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetQueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetQueue() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_GetQueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetQueue(::grpc::ServerContext* /*context*/, const ::api::GetDeviceQueueItemsRequest* /*request*/, ::api::GetDeviceQueueItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetQueue(::grpc::ServerContext* context, ::api::GetDeviceQueueItemsRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::GetDeviceQueueItemsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNextFCntDown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetNextFCntDown() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_GetNextFCntDown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNextFCntDown(::grpc::ServerContext* /*context*/, const ::api::GetDeviceNextFCntDownRequest* /*request*/, ::api::GetDeviceNextFCntDownResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNextFCntDown(::grpc::ServerContext* context, ::api::GetDeviceNextFCntDownRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::GetDeviceNextFCntDownResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Create<WithAsyncMethod_Get<WithAsyncMethod_Update<WithAsyncMethod_Delete<WithAsyncMethod_List<WithAsyncMethod_CreateKeys<WithAsyncMethod_GetKeys<WithAsyncMethod_UpdateKeys<WithAsyncMethod_DeleteKeys<WithAsyncMethod_FlushDevNonces<WithAsyncMethod_Activate<WithAsyncMethod_Deactivate<WithAsyncMethod_GetActivation<WithAsyncMethod_GetRandomDevAddr<WithAsyncMethod_GetMetrics<WithAsyncMethod_GetLinkMetrics<WithAsyncMethod_Enqueue<WithAsyncMethod_FlushQueue<WithAsyncMethod_GetQueue<WithAsyncMethod_GetNextFCntDown<Service > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_Create() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(0,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::CreateDeviceRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::CreateDeviceRequest* request, ::google::protobuf::Empty* response) { return this->Create(context, request, response); }));}
    void SetMessageAllocatorFor_Create(
        ::grpc::experimental::MessageAllocator< ::api::CreateDeviceRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(0);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::CreateDeviceRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::api::CreateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Create(
      ::grpc::CallbackServerContext* /*context*/, const ::api::CreateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Create(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::CreateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_Get() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(1,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::GetDeviceRequest, ::api::GetDeviceResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::GetDeviceRequest* request, ::api::GetDeviceResponse* response) { return this->Get(context, request, response); }));}
    void SetMessageAllocatorFor_Get(
        ::grpc::experimental::MessageAllocator< ::api::GetDeviceRequest, ::api::GetDeviceResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(1);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::GetDeviceRequest, ::api::GetDeviceResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::api::GetDeviceRequest* /*request*/, ::api::GetDeviceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Get(
      ::grpc::CallbackServerContext* /*context*/, const ::api::GetDeviceRequest* /*request*/, ::api::GetDeviceResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Get(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::GetDeviceRequest* /*request*/, ::api::GetDeviceResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_Update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_Update() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(2,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::UpdateDeviceRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::UpdateDeviceRequest* request, ::google::protobuf::Empty* response) { return this->Update(context, request, response); }));}
    void SetMessageAllocatorFor_Update(
        ::grpc::experimental::MessageAllocator< ::api::UpdateDeviceRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(2);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::UpdateDeviceRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_Update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Update(::grpc::ServerContext* /*context*/, const ::api::UpdateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Update(
      ::grpc::CallbackServerContext* /*context*/, const ::api::UpdateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Update(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::UpdateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_Delete() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(3,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::DeleteDeviceRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::DeleteDeviceRequest* request, ::google::protobuf::Empty* response) { return this->Delete(context, request, response); }));}
    void SetMessageAllocatorFor_Delete(
        ::grpc::experimental::MessageAllocator< ::api::DeleteDeviceRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(3);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::DeleteDeviceRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::api::DeleteDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Delete(
      ::grpc::CallbackServerContext* /*context*/, const ::api::DeleteDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Delete(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::DeleteDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_List() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(4,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::ListDevicesRequest, ::api::ListDevicesResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::ListDevicesRequest* request, ::api::ListDevicesResponse* response) { return this->List(context, request, response); }));}
    void SetMessageAllocatorFor_List(
        ::grpc::experimental::MessageAllocator< ::api::ListDevicesRequest, ::api::ListDevicesResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(4);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::ListDevicesRequest, ::api::ListDevicesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::api::ListDevicesRequest* /*request*/, ::api::ListDevicesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* List(
      ::grpc::CallbackServerContext* /*context*/, const ::api::ListDevicesRequest* /*request*/, ::api::ListDevicesResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* List(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::ListDevicesRequest* /*request*/, ::api::ListDevicesResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreateKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_CreateKeys() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(5,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::CreateDeviceKeysRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::CreateDeviceKeysRequest* request, ::google::protobuf::Empty* response) { return this->CreateKeys(context, request, response); }));}
    void SetMessageAllocatorFor_CreateKeys(
        ::grpc::experimental::MessageAllocator< ::api::CreateDeviceKeysRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(5);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::CreateDeviceKeysRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_CreateKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateKeys(::grpc::ServerContext* /*context*/, const ::api::CreateDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreateKeys(
      ::grpc::CallbackServerContext* /*context*/, const ::api::CreateDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreateKeys(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::CreateDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetKeys() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(6,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::GetDeviceKeysRequest, ::api::GetDeviceKeysResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::GetDeviceKeysRequest* request, ::api::GetDeviceKeysResponse* response) { return this->GetKeys(context, request, response); }));}
    void SetMessageAllocatorFor_GetKeys(
        ::grpc::experimental::MessageAllocator< ::api::GetDeviceKeysRequest, ::api::GetDeviceKeysResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(6);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::GetDeviceKeysRequest, ::api::GetDeviceKeysResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetKeys(::grpc::ServerContext* /*context*/, const ::api::GetDeviceKeysRequest* /*request*/, ::api::GetDeviceKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetKeys(
      ::grpc::CallbackServerContext* /*context*/, const ::api::GetDeviceKeysRequest* /*request*/, ::api::GetDeviceKeysResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetKeys(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::GetDeviceKeysRequest* /*request*/, ::api::GetDeviceKeysResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UpdateKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UpdateKeys() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(7,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::UpdateDeviceKeysRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::UpdateDeviceKeysRequest* request, ::google::protobuf::Empty* response) { return this->UpdateKeys(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateKeys(
        ::grpc::experimental::MessageAllocator< ::api::UpdateDeviceKeysRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(7);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::UpdateDeviceKeysRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UpdateKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateKeys(::grpc::ServerContext* /*context*/, const ::api::UpdateDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateKeys(
      ::grpc::CallbackServerContext* /*context*/, const ::api::UpdateDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateKeys(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::UpdateDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteKeys() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(8,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::DeleteDeviceKeysRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::DeleteDeviceKeysRequest* request, ::google::protobuf::Empty* response) { return this->DeleteKeys(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteKeys(
        ::grpc::experimental::MessageAllocator< ::api::DeleteDeviceKeysRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(8);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::DeleteDeviceKeysRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteKeys(::grpc::ServerContext* /*context*/, const ::api::DeleteDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteKeys(
      ::grpc::CallbackServerContext* /*context*/, const ::api::DeleteDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteKeys(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::DeleteDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_FlushDevNonces : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_FlushDevNonces() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(9,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::FlushDevNoncesRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::FlushDevNoncesRequest* request, ::google::protobuf::Empty* response) { return this->FlushDevNonces(context, request, response); }));}
    void SetMessageAllocatorFor_FlushDevNonces(
        ::grpc::experimental::MessageAllocator< ::api::FlushDevNoncesRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(9);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::FlushDevNoncesRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_FlushDevNonces() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FlushDevNonces(::grpc::ServerContext* /*context*/, const ::api::FlushDevNoncesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* FlushDevNonces(
      ::grpc::CallbackServerContext* /*context*/, const ::api::FlushDevNoncesRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* FlushDevNonces(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::FlushDevNoncesRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_Activate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_Activate() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(10,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::ActivateDeviceRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::ActivateDeviceRequest* request, ::google::protobuf::Empty* response) { return this->Activate(context, request, response); }));}
    void SetMessageAllocatorFor_Activate(
        ::grpc::experimental::MessageAllocator< ::api::ActivateDeviceRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(10);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::ActivateDeviceRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_Activate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Activate(::grpc::ServerContext* /*context*/, const ::api::ActivateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Activate(
      ::grpc::CallbackServerContext* /*context*/, const ::api::ActivateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Activate(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::ActivateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_Deactivate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_Deactivate() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(11,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::DeactivateDeviceRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::DeactivateDeviceRequest* request, ::google::protobuf::Empty* response) { return this->Deactivate(context, request, response); }));}
    void SetMessageAllocatorFor_Deactivate(
        ::grpc::experimental::MessageAllocator< ::api::DeactivateDeviceRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(11);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::DeactivateDeviceRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_Deactivate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Deactivate(::grpc::ServerContext* /*context*/, const ::api::DeactivateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Deactivate(
      ::grpc::CallbackServerContext* /*context*/, const ::api::DeactivateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Deactivate(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::DeactivateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetActivation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetActivation() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(12,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::GetDeviceActivationRequest, ::api::GetDeviceActivationResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::GetDeviceActivationRequest* request, ::api::GetDeviceActivationResponse* response) { return this->GetActivation(context, request, response); }));}
    void SetMessageAllocatorFor_GetActivation(
        ::grpc::experimental::MessageAllocator< ::api::GetDeviceActivationRequest, ::api::GetDeviceActivationResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(12);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::GetDeviceActivationRequest, ::api::GetDeviceActivationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetActivation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActivation(::grpc::ServerContext* /*context*/, const ::api::GetDeviceActivationRequest* /*request*/, ::api::GetDeviceActivationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetActivation(
      ::grpc::CallbackServerContext* /*context*/, const ::api::GetDeviceActivationRequest* /*request*/, ::api::GetDeviceActivationResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetActivation(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::GetDeviceActivationRequest* /*request*/, ::api::GetDeviceActivationResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetRandomDevAddr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetRandomDevAddr() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(13,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::GetRandomDevAddrRequest, ::api::GetRandomDevAddrResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::GetRandomDevAddrRequest* request, ::api::GetRandomDevAddrResponse* response) { return this->GetRandomDevAddr(context, request, response); }));}
    void SetMessageAllocatorFor_GetRandomDevAddr(
        ::grpc::experimental::MessageAllocator< ::api::GetRandomDevAddrRequest, ::api::GetRandomDevAddrResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(13);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::GetRandomDevAddrRequest, ::api::GetRandomDevAddrResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetRandomDevAddr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRandomDevAddr(::grpc::ServerContext* /*context*/, const ::api::GetRandomDevAddrRequest* /*request*/, ::api::GetRandomDevAddrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetRandomDevAddr(
      ::grpc::CallbackServerContext* /*context*/, const ::api::GetRandomDevAddrRequest* /*request*/, ::api::GetRandomDevAddrResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetRandomDevAddr(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::GetRandomDevAddrRequest* /*request*/, ::api::GetRandomDevAddrResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetMetrics() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(14,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::GetDeviceMetricsRequest, ::api::GetDeviceMetricsResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::GetDeviceMetricsRequest* request, ::api::GetDeviceMetricsResponse* response) { return this->GetMetrics(context, request, response); }));}
    void SetMessageAllocatorFor_GetMetrics(
        ::grpc::experimental::MessageAllocator< ::api::GetDeviceMetricsRequest, ::api::GetDeviceMetricsResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(14);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::GetDeviceMetricsRequest, ::api::GetDeviceMetricsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMetrics(::grpc::ServerContext* /*context*/, const ::api::GetDeviceMetricsRequest* /*request*/, ::api::GetDeviceMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetMetrics(
      ::grpc::CallbackServerContext* /*context*/, const ::api::GetDeviceMetricsRequest* /*request*/, ::api::GetDeviceMetricsResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetMetrics(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::GetDeviceMetricsRequest* /*request*/, ::api::GetDeviceMetricsResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetLinkMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetLinkMetrics() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(15,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::GetDeviceLinkMetricsRequest, ::api::GetDeviceLinkMetricsResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::GetDeviceLinkMetricsRequest* request, ::api::GetDeviceLinkMetricsResponse* response) { return this->GetLinkMetrics(context, request, response); }));}
    void SetMessageAllocatorFor_GetLinkMetrics(
        ::grpc::experimental::MessageAllocator< ::api::GetDeviceLinkMetricsRequest, ::api::GetDeviceLinkMetricsResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(15);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::GetDeviceLinkMetricsRequest, ::api::GetDeviceLinkMetricsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetLinkMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLinkMetrics(::grpc::ServerContext* /*context*/, const ::api::GetDeviceLinkMetricsRequest* /*request*/, ::api::GetDeviceLinkMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetLinkMetrics(
      ::grpc::CallbackServerContext* /*context*/, const ::api::GetDeviceLinkMetricsRequest* /*request*/, ::api::GetDeviceLinkMetricsResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetLinkMetrics(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::GetDeviceLinkMetricsRequest* /*request*/, ::api::GetDeviceLinkMetricsResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_Enqueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_Enqueue() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(16,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::EnqueueDeviceQueueItemRequest, ::api::EnqueueDeviceQueueItemResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::EnqueueDeviceQueueItemRequest* request, ::api::EnqueueDeviceQueueItemResponse* response) { return this->Enqueue(context, request, response); }));}
    void SetMessageAllocatorFor_Enqueue(
        ::grpc::experimental::MessageAllocator< ::api::EnqueueDeviceQueueItemRequest, ::api::EnqueueDeviceQueueItemResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(16);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::EnqueueDeviceQueueItemRequest, ::api::EnqueueDeviceQueueItemResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_Enqueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Enqueue(::grpc::ServerContext* /*context*/, const ::api::EnqueueDeviceQueueItemRequest* /*request*/, ::api::EnqueueDeviceQueueItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Enqueue(
      ::grpc::CallbackServerContext* /*context*/, const ::api::EnqueueDeviceQueueItemRequest* /*request*/, ::api::EnqueueDeviceQueueItemResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Enqueue(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::EnqueueDeviceQueueItemRequest* /*request*/, ::api::EnqueueDeviceQueueItemResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_FlushQueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_FlushQueue() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(17,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::FlushDeviceQueueRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::FlushDeviceQueueRequest* request, ::google::protobuf::Empty* response) { return this->FlushQueue(context, request, response); }));}
    void SetMessageAllocatorFor_FlushQueue(
        ::grpc::experimental::MessageAllocator< ::api::FlushDeviceQueueRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(17);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::FlushDeviceQueueRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_FlushQueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FlushQueue(::grpc::ServerContext* /*context*/, const ::api::FlushDeviceQueueRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* FlushQueue(
      ::grpc::CallbackServerContext* /*context*/, const ::api::FlushDeviceQueueRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* FlushQueue(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::FlushDeviceQueueRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetQueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetQueue() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(18,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::GetDeviceQueueItemsRequest, ::api::GetDeviceQueueItemsResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::GetDeviceQueueItemsRequest* request, ::api::GetDeviceQueueItemsResponse* response) { return this->GetQueue(context, request, response); }));}
    void SetMessageAllocatorFor_GetQueue(
        ::grpc::experimental::MessageAllocator< ::api::GetDeviceQueueItemsRequest, ::api::GetDeviceQueueItemsResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(18);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::GetDeviceQueueItemsRequest, ::api::GetDeviceQueueItemsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetQueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetQueue(::grpc::ServerContext* /*context*/, const ::api::GetDeviceQueueItemsRequest* /*request*/, ::api::GetDeviceQueueItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetQueue(
      ::grpc::CallbackServerContext* /*context*/, const ::api::GetDeviceQueueItemsRequest* /*request*/, ::api::GetDeviceQueueItemsResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetQueue(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::GetDeviceQueueItemsRequest* /*request*/, ::api::GetDeviceQueueItemsResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetNextFCntDown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetNextFCntDown() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(19,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::api::GetDeviceNextFCntDownRequest, ::api::GetDeviceNextFCntDownResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::api::GetDeviceNextFCntDownRequest* request, ::api::GetDeviceNextFCntDownResponse* response) { return this->GetNextFCntDown(context, request, response); }));}
    void SetMessageAllocatorFor_GetNextFCntDown(
        ::grpc::experimental::MessageAllocator< ::api::GetDeviceNextFCntDownRequest, ::api::GetDeviceNextFCntDownResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(19);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::api::GetDeviceNextFCntDownRequest, ::api::GetDeviceNextFCntDownResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetNextFCntDown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNextFCntDown(::grpc::ServerContext* /*context*/, const ::api::GetDeviceNextFCntDownRequest* /*request*/, ::api::GetDeviceNextFCntDownResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetNextFCntDown(
      ::grpc::CallbackServerContext* /*context*/, const ::api::GetDeviceNextFCntDownRequest* /*request*/, ::api::GetDeviceNextFCntDownResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetNextFCntDown(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::api::GetDeviceNextFCntDownRequest* /*request*/, ::api::GetDeviceNextFCntDownResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
  typedef ExperimentalWithCallbackMethod_Create<ExperimentalWithCallbackMethod_Get<ExperimentalWithCallbackMethod_Update<ExperimentalWithCallbackMethod_Delete<ExperimentalWithCallbackMethod_List<ExperimentalWithCallbackMethod_CreateKeys<ExperimentalWithCallbackMethod_GetKeys<ExperimentalWithCallbackMethod_UpdateKeys<ExperimentalWithCallbackMethod_DeleteKeys<ExperimentalWithCallbackMethod_FlushDevNonces<ExperimentalWithCallbackMethod_Activate<ExperimentalWithCallbackMethod_Deactivate<ExperimentalWithCallbackMethod_GetActivation<ExperimentalWithCallbackMethod_GetRandomDevAddr<ExperimentalWithCallbackMethod_GetMetrics<ExperimentalWithCallbackMethod_GetLinkMetrics<ExperimentalWithCallbackMethod_Enqueue<ExperimentalWithCallbackMethod_FlushQueue<ExperimentalWithCallbackMethod_GetQueue<ExperimentalWithCallbackMethod_GetNextFCntDown<Service > > > > > > > > > > > > > > > > > > > > CallbackService;
  #endif

  typedef ExperimentalWithCallbackMethod_Create<ExperimentalWithCallbackMethod_Get<ExperimentalWithCallbackMethod_Update<ExperimentalWithCallbackMethod_Delete<ExperimentalWithCallbackMethod_List<ExperimentalWithCallbackMethod_CreateKeys<ExperimentalWithCallbackMethod_GetKeys<ExperimentalWithCallbackMethod_UpdateKeys<ExperimentalWithCallbackMethod_DeleteKeys<ExperimentalWithCallbackMethod_FlushDevNonces<ExperimentalWithCallbackMethod_Activate<ExperimentalWithCallbackMethod_Deactivate<ExperimentalWithCallbackMethod_GetActivation<ExperimentalWithCallbackMethod_GetRandomDevAddr<ExperimentalWithCallbackMethod_GetMetrics<ExperimentalWithCallbackMethod_GetLinkMetrics<ExperimentalWithCallbackMethod_Enqueue<ExperimentalWithCallbackMethod_FlushQueue<ExperimentalWithCallbackMethod_GetQueue<ExperimentalWithCallbackMethod_GetNextFCntDown<Service > > > > > > > > > > > > > > > > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Create() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::api::CreateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Get() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::api::GetDeviceRequest* /*request*/, ::api::GetDeviceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Update() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_Update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Update(::grpc::ServerContext* /*context*/, const ::api::UpdateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Delete() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::api::DeleteDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_List() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::api::ListDevicesRequest* /*request*/, ::api::ListDevicesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateKeys() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_CreateKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateKeys(::grpc::ServerContext* /*context*/, const ::api::CreateDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetKeys() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetKeys(::grpc::ServerContext* /*context*/, const ::api::GetDeviceKeysRequest* /*request*/, ::api::GetDeviceKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateKeys() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_UpdateKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateKeys(::grpc::ServerContext* /*context*/, const ::api::UpdateDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteKeys() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_DeleteKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteKeys(::grpc::ServerContext* /*context*/, const ::api::DeleteDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FlushDevNonces : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FlushDevNonces() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_FlushDevNonces() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FlushDevNonces(::grpc::ServerContext* /*context*/, const ::api::FlushDevNoncesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Activate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Activate() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_Activate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Activate(::grpc::ServerContext* /*context*/, const ::api::ActivateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Deactivate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Deactivate() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_Deactivate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Deactivate(::grpc::ServerContext* /*context*/, const ::api::DeactivateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetActivation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetActivation() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_GetActivation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActivation(::grpc::ServerContext* /*context*/, const ::api::GetDeviceActivationRequest* /*request*/, ::api::GetDeviceActivationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRandomDevAddr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRandomDevAddr() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetRandomDevAddr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRandomDevAddr(::grpc::ServerContext* /*context*/, const ::api::GetRandomDevAddrRequest* /*request*/, ::api::GetRandomDevAddrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMetrics() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_GetMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMetrics(::grpc::ServerContext* /*context*/, const ::api::GetDeviceMetricsRequest* /*request*/, ::api::GetDeviceMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetLinkMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetLinkMetrics() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_GetLinkMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLinkMetrics(::grpc::ServerContext* /*context*/, const ::api::GetDeviceLinkMetricsRequest* /*request*/, ::api::GetDeviceLinkMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Enqueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Enqueue() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_Enqueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Enqueue(::grpc::ServerContext* /*context*/, const ::api::EnqueueDeviceQueueItemRequest* /*request*/, ::api::EnqueueDeviceQueueItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FlushQueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FlushQueue() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_FlushQueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FlushQueue(::grpc::ServerContext* /*context*/, const ::api::FlushDeviceQueueRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetQueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetQueue() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_GetQueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetQueue(::grpc::ServerContext* /*context*/, const ::api::GetDeviceQueueItemsRequest* /*request*/, ::api::GetDeviceQueueItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetNextFCntDown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetNextFCntDown() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_GetNextFCntDown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNextFCntDown(::grpc::ServerContext* /*context*/, const ::api::GetDeviceNextFCntDownRequest* /*request*/, ::api::GetDeviceNextFCntDownResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Create() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::api::CreateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Get() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::api::GetDeviceRequest* /*request*/, ::api::GetDeviceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Update() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_Update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Update(::grpc::ServerContext* /*context*/, const ::api::UpdateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Delete() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::api::DeleteDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelete(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_List() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::api::ListDevicesRequest* /*request*/, ::api::ListDevicesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateKeys() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_CreateKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateKeys(::grpc::ServerContext* /*context*/, const ::api::CreateDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateKeys(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetKeys() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetKeys(::grpc::ServerContext* /*context*/, const ::api::GetDeviceKeysRequest* /*request*/, ::api::GetDeviceKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetKeys(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateKeys() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_UpdateKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateKeys(::grpc::ServerContext* /*context*/, const ::api::UpdateDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateKeys(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteKeys() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_DeleteKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteKeys(::grpc::ServerContext* /*context*/, const ::api::DeleteDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteKeys(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FlushDevNonces : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FlushDevNonces() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_FlushDevNonces() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FlushDevNonces(::grpc::ServerContext* /*context*/, const ::api::FlushDevNoncesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFlushDevNonces(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Activate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Activate() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_Activate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Activate(::grpc::ServerContext* /*context*/, const ::api::ActivateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestActivate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Deactivate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Deactivate() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_Deactivate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Deactivate(::grpc::ServerContext* /*context*/, const ::api::DeactivateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeactivate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetActivation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetActivation() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_GetActivation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActivation(::grpc::ServerContext* /*context*/, const ::api::GetDeviceActivationRequest* /*request*/, ::api::GetDeviceActivationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetActivation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRandomDevAddr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRandomDevAddr() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_GetRandomDevAddr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRandomDevAddr(::grpc::ServerContext* /*context*/, const ::api::GetRandomDevAddrRequest* /*request*/, ::api::GetRandomDevAddrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRandomDevAddr(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMetrics() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_GetMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMetrics(::grpc::ServerContext* /*context*/, const ::api::GetDeviceMetricsRequest* /*request*/, ::api::GetDeviceMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMetrics(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetLinkMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetLinkMetrics() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_GetLinkMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLinkMetrics(::grpc::ServerContext* /*context*/, const ::api::GetDeviceLinkMetricsRequest* /*request*/, ::api::GetDeviceLinkMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLinkMetrics(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Enqueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Enqueue() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_Enqueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Enqueue(::grpc::ServerContext* /*context*/, const ::api::EnqueueDeviceQueueItemRequest* /*request*/, ::api::EnqueueDeviceQueueItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEnqueue(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FlushQueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FlushQueue() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_FlushQueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FlushQueue(::grpc::ServerContext* /*context*/, const ::api::FlushDeviceQueueRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFlushQueue(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetQueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetQueue() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_GetQueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetQueue(::grpc::ServerContext* /*context*/, const ::api::GetDeviceQueueItemsRequest* /*request*/, ::api::GetDeviceQueueItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetQueue(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetNextFCntDown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetNextFCntDown() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_GetNextFCntDown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNextFCntDown(::grpc::ServerContext* /*context*/, const ::api::GetDeviceNextFCntDownRequest* /*request*/, ::api::GetDeviceNextFCntDownResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNextFCntDown(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_Create() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(0,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Create(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::api::CreateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Create(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Create(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_Get() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(1,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Get(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::api::GetDeviceRequest* /*request*/, ::api::GetDeviceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Get(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Get(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_Update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_Update() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(2,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Update(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_Update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Update(::grpc::ServerContext* /*context*/, const ::api::UpdateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Update(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Update(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_Delete() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(3,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Delete(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::api::DeleteDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Delete(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Delete(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_List() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(4,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->List(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::api::ListDevicesRequest* /*request*/, ::api::ListDevicesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* List(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* List(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreateKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_CreateKeys() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(5,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateKeys(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_CreateKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateKeys(::grpc::ServerContext* /*context*/, const ::api::CreateDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreateKeys(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreateKeys(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetKeys() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(6,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetKeys(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetKeys(::grpc::ServerContext* /*context*/, const ::api::GetDeviceKeysRequest* /*request*/, ::api::GetDeviceKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetKeys(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetKeys(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UpdateKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UpdateKeys() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(7,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateKeys(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UpdateKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateKeys(::grpc::ServerContext* /*context*/, const ::api::UpdateDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateKeys(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateKeys(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteKeys() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(8,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteKeys(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteKeys(::grpc::ServerContext* /*context*/, const ::api::DeleteDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteKeys(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteKeys(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_FlushDevNonces : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_FlushDevNonces() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(9,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FlushDevNonces(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_FlushDevNonces() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FlushDevNonces(::grpc::ServerContext* /*context*/, const ::api::FlushDevNoncesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* FlushDevNonces(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* FlushDevNonces(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_Activate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_Activate() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(10,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Activate(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_Activate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Activate(::grpc::ServerContext* /*context*/, const ::api::ActivateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Activate(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Activate(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_Deactivate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_Deactivate() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(11,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Deactivate(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_Deactivate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Deactivate(::grpc::ServerContext* /*context*/, const ::api::DeactivateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Deactivate(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Deactivate(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetActivation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetActivation() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(12,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetActivation(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetActivation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActivation(::grpc::ServerContext* /*context*/, const ::api::GetDeviceActivationRequest* /*request*/, ::api::GetDeviceActivationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetActivation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetActivation(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetRandomDevAddr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetRandomDevAddr() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(13,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRandomDevAddr(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetRandomDevAddr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRandomDevAddr(::grpc::ServerContext* /*context*/, const ::api::GetRandomDevAddrRequest* /*request*/, ::api::GetRandomDevAddrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetRandomDevAddr(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetRandomDevAddr(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetMetrics() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(14,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMetrics(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMetrics(::grpc::ServerContext* /*context*/, const ::api::GetDeviceMetricsRequest* /*request*/, ::api::GetDeviceMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetMetrics(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetMetrics(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetLinkMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetLinkMetrics() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(15,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetLinkMetrics(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetLinkMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLinkMetrics(::grpc::ServerContext* /*context*/, const ::api::GetDeviceLinkMetricsRequest* /*request*/, ::api::GetDeviceLinkMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetLinkMetrics(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetLinkMetrics(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_Enqueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_Enqueue() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(16,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Enqueue(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_Enqueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Enqueue(::grpc::ServerContext* /*context*/, const ::api::EnqueueDeviceQueueItemRequest* /*request*/, ::api::EnqueueDeviceQueueItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Enqueue(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Enqueue(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_FlushQueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_FlushQueue() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(17,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FlushQueue(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_FlushQueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FlushQueue(::grpc::ServerContext* /*context*/, const ::api::FlushDeviceQueueRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* FlushQueue(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* FlushQueue(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetQueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetQueue() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(18,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetQueue(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetQueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetQueue(::grpc::ServerContext* /*context*/, const ::api::GetDeviceQueueItemsRequest* /*request*/, ::api::GetDeviceQueueItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetQueue(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetQueue(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetNextFCntDown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetNextFCntDown() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(19,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetNextFCntDown(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetNextFCntDown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNextFCntDown(::grpc::ServerContext* /*context*/, const ::api::GetDeviceNextFCntDownRequest* /*request*/, ::api::GetDeviceNextFCntDownResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetNextFCntDown(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetNextFCntDown(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Create() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::CreateDeviceRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::CreateDeviceRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedCreate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::api::CreateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::CreateDeviceRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Get() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::GetDeviceRequest, ::api::GetDeviceResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::GetDeviceRequest, ::api::GetDeviceResponse>* streamer) {
                       return this->StreamedGet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Get(::grpc::ServerContext* /*context*/, const ::api::GetDeviceRequest* /*request*/, ::api::GetDeviceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::GetDeviceRequest,::api::GetDeviceResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Update() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::UpdateDeviceRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::UpdateDeviceRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedUpdate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Update(::grpc::ServerContext* /*context*/, const ::api::UpdateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::UpdateDeviceRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Delete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Delete() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::DeleteDeviceRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::DeleteDeviceRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDelete(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Delete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Delete(::grpc::ServerContext* /*context*/, const ::api::DeleteDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDelete(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::DeleteDeviceRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_List() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::ListDevicesRequest, ::api::ListDevicesResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::ListDevicesRequest, ::api::ListDevicesResponse>* streamer) {
                       return this->StreamedList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::api::ListDevicesRequest* /*request*/, ::api::ListDevicesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::ListDevicesRequest,::api::ListDevicesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateKeys() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::CreateDeviceKeysRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::CreateDeviceKeysRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedCreateKeys(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateKeys(::grpc::ServerContext* /*context*/, const ::api::CreateDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateKeys(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::CreateDeviceKeysRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetKeys() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::GetDeviceKeysRequest, ::api::GetDeviceKeysResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::GetDeviceKeysRequest, ::api::GetDeviceKeysResponse>* streamer) {
                       return this->StreamedGetKeys(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetKeys(::grpc::ServerContext* /*context*/, const ::api::GetDeviceKeysRequest* /*request*/, ::api::GetDeviceKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetKeys(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::GetDeviceKeysRequest,::api::GetDeviceKeysResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateKeys() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::UpdateDeviceKeysRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::UpdateDeviceKeysRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedUpdateKeys(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateKeys(::grpc::ServerContext* /*context*/, const ::api::UpdateDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateKeys(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::UpdateDeviceKeysRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteKeys() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::DeleteDeviceKeysRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::DeleteDeviceKeysRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteKeys(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteKeys(::grpc::ServerContext* /*context*/, const ::api::DeleteDeviceKeysRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteKeys(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::DeleteDeviceKeysRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FlushDevNonces : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FlushDevNonces() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::FlushDevNoncesRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::FlushDevNoncesRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedFlushDevNonces(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FlushDevNonces() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FlushDevNonces(::grpc::ServerContext* /*context*/, const ::api::FlushDevNoncesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFlushDevNonces(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::FlushDevNoncesRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Activate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Activate() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::ActivateDeviceRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::ActivateDeviceRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedActivate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Activate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Activate(::grpc::ServerContext* /*context*/, const ::api::ActivateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedActivate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::ActivateDeviceRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Deactivate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Deactivate() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::DeactivateDeviceRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::DeactivateDeviceRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeactivate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Deactivate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Deactivate(::grpc::ServerContext* /*context*/, const ::api::DeactivateDeviceRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeactivate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::DeactivateDeviceRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetActivation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetActivation() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::GetDeviceActivationRequest, ::api::GetDeviceActivationResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::GetDeviceActivationRequest, ::api::GetDeviceActivationResponse>* streamer) {
                       return this->StreamedGetActivation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetActivation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetActivation(::grpc::ServerContext* /*context*/, const ::api::GetDeviceActivationRequest* /*request*/, ::api::GetDeviceActivationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetActivation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::GetDeviceActivationRequest,::api::GetDeviceActivationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRandomDevAddr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRandomDevAddr() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::GetRandomDevAddrRequest, ::api::GetRandomDevAddrResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::GetRandomDevAddrRequest, ::api::GetRandomDevAddrResponse>* streamer) {
                       return this->StreamedGetRandomDevAddr(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRandomDevAddr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRandomDevAddr(::grpc::ServerContext* /*context*/, const ::api::GetRandomDevAddrRequest* /*request*/, ::api::GetRandomDevAddrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRandomDevAddr(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::GetRandomDevAddrRequest,::api::GetRandomDevAddrResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMetrics() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::GetDeviceMetricsRequest, ::api::GetDeviceMetricsResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::GetDeviceMetricsRequest, ::api::GetDeviceMetricsResponse>* streamer) {
                       return this->StreamedGetMetrics(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMetrics(::grpc::ServerContext* /*context*/, const ::api::GetDeviceMetricsRequest* /*request*/, ::api::GetDeviceMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMetrics(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::GetDeviceMetricsRequest,::api::GetDeviceMetricsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetLinkMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetLinkMetrics() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::GetDeviceLinkMetricsRequest, ::api::GetDeviceLinkMetricsResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::GetDeviceLinkMetricsRequest, ::api::GetDeviceLinkMetricsResponse>* streamer) {
                       return this->StreamedGetLinkMetrics(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetLinkMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetLinkMetrics(::grpc::ServerContext* /*context*/, const ::api::GetDeviceLinkMetricsRequest* /*request*/, ::api::GetDeviceLinkMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetLinkMetrics(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::GetDeviceLinkMetricsRequest,::api::GetDeviceLinkMetricsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Enqueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Enqueue() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::EnqueueDeviceQueueItemRequest, ::api::EnqueueDeviceQueueItemResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::EnqueueDeviceQueueItemRequest, ::api::EnqueueDeviceQueueItemResponse>* streamer) {
                       return this->StreamedEnqueue(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Enqueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Enqueue(::grpc::ServerContext* /*context*/, const ::api::EnqueueDeviceQueueItemRequest* /*request*/, ::api::EnqueueDeviceQueueItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEnqueue(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::EnqueueDeviceQueueItemRequest,::api::EnqueueDeviceQueueItemResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FlushQueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FlushQueue() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::FlushDeviceQueueRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::FlushDeviceQueueRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedFlushQueue(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FlushQueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FlushQueue(::grpc::ServerContext* /*context*/, const ::api::FlushDeviceQueueRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFlushQueue(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::FlushDeviceQueueRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetQueue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetQueue() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::GetDeviceQueueItemsRequest, ::api::GetDeviceQueueItemsResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::GetDeviceQueueItemsRequest, ::api::GetDeviceQueueItemsResponse>* streamer) {
                       return this->StreamedGetQueue(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetQueue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetQueue(::grpc::ServerContext* /*context*/, const ::api::GetDeviceQueueItemsRequest* /*request*/, ::api::GetDeviceQueueItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetQueue(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::GetDeviceQueueItemsRequest,::api::GetDeviceQueueItemsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetNextFCntDown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetNextFCntDown() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::GetDeviceNextFCntDownRequest, ::api::GetDeviceNextFCntDownResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::api::GetDeviceNextFCntDownRequest, ::api::GetDeviceNextFCntDownResponse>* streamer) {
                       return this->StreamedGetNextFCntDown(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetNextFCntDown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNextFCntDown(::grpc::ServerContext* /*context*/, const ::api::GetDeviceNextFCntDownRequest* /*request*/, ::api::GetDeviceNextFCntDownResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetNextFCntDown(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::GetDeviceNextFCntDownRequest,::api::GetDeviceNextFCntDownResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Create<WithStreamedUnaryMethod_Get<WithStreamedUnaryMethod_Update<WithStreamedUnaryMethod_Delete<WithStreamedUnaryMethod_List<WithStreamedUnaryMethod_CreateKeys<WithStreamedUnaryMethod_GetKeys<WithStreamedUnaryMethod_UpdateKeys<WithStreamedUnaryMethod_DeleteKeys<WithStreamedUnaryMethod_FlushDevNonces<WithStreamedUnaryMethod_Activate<WithStreamedUnaryMethod_Deactivate<WithStreamedUnaryMethod_GetActivation<WithStreamedUnaryMethod_GetRandomDevAddr<WithStreamedUnaryMethod_GetMetrics<WithStreamedUnaryMethod_GetLinkMetrics<WithStreamedUnaryMethod_Enqueue<WithStreamedUnaryMethod_FlushQueue<WithStreamedUnaryMethod_GetQueue<WithStreamedUnaryMethod_GetNextFCntDown<Service > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Create<WithStreamedUnaryMethod_Get<WithStreamedUnaryMethod_Update<WithStreamedUnaryMethod_Delete<WithStreamedUnaryMethod_List<WithStreamedUnaryMethod_CreateKeys<WithStreamedUnaryMethod_GetKeys<WithStreamedUnaryMethod_UpdateKeys<WithStreamedUnaryMethod_DeleteKeys<WithStreamedUnaryMethod_FlushDevNonces<WithStreamedUnaryMethod_Activate<WithStreamedUnaryMethod_Deactivate<WithStreamedUnaryMethod_GetActivation<WithStreamedUnaryMethod_GetRandomDevAddr<WithStreamedUnaryMethod_GetMetrics<WithStreamedUnaryMethod_GetLinkMetrics<WithStreamedUnaryMethod_Enqueue<WithStreamedUnaryMethod_FlushQueue<WithStreamedUnaryMethod_GetQueue<WithStreamedUnaryMethod_GetNextFCntDown<Service > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace api


#endif  // GRPC_api_2fdevice_2eproto__INCLUDED
